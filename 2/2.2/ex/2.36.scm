(define (accumulate op initial sequence)
    (if (null? sequence)
        initial
        (op (car sequence) (accumulate op initial (cdr sequence)))))
(define (accumulate_n op init seqs)
    (if (null? (car seqs))
        '()
        (cons (accumulate op init (map (lambda (x) (car x)) seqs))
              (accumulate_n op init (map (lambda (x) (cdr x)) seqs)))))
(accumulate_n + 0 '((1 2 3) (4 5 6) (7 8 9) (10 11 12)))