(define (union_set set1 set2)
    (cond ((null? set1) set2)
          ((null? set2) set1)
          (else (let ((x1 (car set1))
                      (x2 (car set2)))
                    (cond ((< x1 x2) (cons x1 (union_set (cdr set1) set2)))
                          ((> x1 x2) (cons x2 (union_set set1 (cdr set2))))
                          (else (cons x1 (union_set (cdr set1) (cdr set2)))))))))
(union_set '(1 2 3) '(1 3 5))
(union_set '(0 2 3) '(1 3 5))
(union_set '(3 4 5) '(1 3 5))