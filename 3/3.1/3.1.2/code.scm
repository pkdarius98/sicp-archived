(define rand
    (let ((x random_init))
        (lambda () (set! x (rand_update x)) x)))
(define (estimate_pi trials)
    (sqrt (/ 6 (monte_carlo trials cesaro_test))))
(define (cesaro_test)
    (= (gcd (rand) (rand)) 1))
(define (monte_carlo trials experiment)
    (define (iter trials_remaining trials_passed)
        (cond ((= trials_remaining 0) (/ trials_passed trials))
              ((experiment) (iter (- trials_remaining 1)
                                  (+ trials_passed 1)))
              (else (iter (- trials_remaining 1) trials_passed))))
    (iter trials 0))
